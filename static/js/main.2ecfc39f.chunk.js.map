{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","chosenTodo","setChosenTodo","className","map","todo","classNames","id","completed","title","type","onClick","handleClick","TodoFilter","initialTodos","setTodos","useState","selectedTodos","setSelectedTodos","query","setQuery","useEffect","filteredTodos","filter","includes","toLowerCase","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","nonExistedTodo","user","setUser","showTodoModal","setShowTodoModal","userId","href","email","name","App","setInitialTodos","todosFromServer","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ecfc39f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  chosenTodo: Todo,\n  setChosenTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  chosenTodo,\n  setChosenTodo,\n}) => {\n  const handleClick = (todo: Todo) => {\n    setChosenTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': chosenTodo.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far fa-eye${todo.id === chosenTodo.id ? '-slash' : ''}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoFilterProps {\n  initialTodos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  initialTodos,\n  setTodos,\n}) => {\n  const [selectedTodos, setSelectedTodos] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedTodos(e.target.value);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleDelete = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    let filteredTodos = initialTodos;\n\n    switch (selectedTodos) {\n      case 'active':\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    setTodos(filteredTodos\n      .filter(todo => todo.title.includes(query.toLowerCase())));\n  }, [selectedTodos, query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedTodos}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleDelete}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  chosenTodo: Todo,\n  nonExistedTodo: Todo,\n  setChosenTodo: (todo: Todo) => void,\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  chosenTodo,\n  nonExistedTodo,\n  setChosenTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [showTodoModal, setShowTodoModal] = useState(true);\n\n  const handleDeleteTodoModal = () => {\n    setChosenTodo(nonExistedTodo);\n  };\n\n  useEffect(() => {\n    getUser(chosenTodo.userId)\n      .then(setUser)\n      .then(() => setShowTodoModal(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {showTodoModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosenTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleDeleteTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {chosenTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {chosenTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst nonExistedTodo: Todo = {\n  id: 0,\n  title: 'none',\n  completed: false,\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [chosenTodo, setChosenTodo] = useState<Todo>(nonExistedTodo);\n\n  useEffect(() => {\n    getTodos().then((todosFromServer) => {\n      setTodos(todosFromServer);\n      setInitialTodos(todosFromServer);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                initialTodos={initialTodos}\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={todos}\n                    chosenTodo={chosenTodo}\n                    setChosenTodo={setChosenTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {chosenTodo.id > 0 && (\n        <TodoModal\n          chosenTodo={chosenTodo}\n          nonExistedTodo={nonExistedTodo}\n          setChosenTodo={setChosenTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}